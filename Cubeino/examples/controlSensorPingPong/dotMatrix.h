byte full_Image[] = {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111
};

byte null_Image[] = {
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000  
};

byte left_Image[] = {
  B00000000,
  B00011000,
  B00111000,
  B11111111,
  B11111111,
  B00111000,
  B00011000,
  B00000000  
};

byte right_Image[] = {
  B00000000,
  B00011000,
  B00011100,
  B11111111,
  B11111111,
  B00011100,
  B00011000,
  B00000000  
};

byte letter_A[] = {B00110000,B01111000,B11001100,B11001100,B11111100,B11001100,B11001100,B00000000}; // A
byte letter_B[] = {B11111100,B01100110,B01100110,B01111100,B01100110,B01100110,B11111100,B00000000}; // B
byte letter_C[] = {B00111100,B01100110,B11000000,B11000000,B11000000,B01100110,B00111100,B00000000}; // C
byte letter_D[] = {B11111000,B01101100,B01100110,B01100110,B01100110,B01101100,B11111000,B00000000}; // D
byte letter_E[] = {B11111110,B01100010,B01101000,B01111000,B01101000,B01100010,B11111110,B00000000}; // E
byte letter_F[] = {B11111110,B01100010,B01101000,B01111000,B01101000,B01100000,B11110000,B00000000}; // F
byte letter_G[] = {B00111100,B01100110,B11000000,B11000000,B11001110,B01100110,B00111110,B00000000}; // G
byte letter_H[] = {B11001100,B11001100,B11001100,B11111100,B11001100,B11001100,B11001100,B00000000}; // H
byte letter_I[] = {B01111000,B00110000,B00110000,B00110000,B00110000,B00110000,B01111000,B00000000}; // I
byte letter_J[] = {B00011110,B00001100,B00001100,B00001100,B11001100,B11001100,B01111000,B00000000}; // J
byte letter_K[] = {B11110110,B01100110,B01101100,B01111000,B01101100,B01100110,B11110110,B00000000}; // K
byte letter_L[] = {B11110000,B01100000,B01100000,B01100000,B01100010,B01100110,B11111110,B00000000}; // L
byte letter_M[] = {B11000110,B11101110,B11111110,B11111110,B11010110,B11000110,B11000110,B00000000}; // M
byte letter_N[] = {B11000110,B11100110,B11110110,B11011110,B11001110,B11000110,B11000110,B00000000}; // N
byte letter_O[] = {B00111000,B01101100,B11000110,B11000110,B11000110,B01101100,B00111000,B00000000}; // O
byte letter_P[] = {B11111100,B01100110,B01100110,B01111100,B01100000,B01100000,B11110000,B00000000}; // P
byte letter_Q[] = {B01111000,B11001100,B11001100,B11001100,B11011100,B01111000,B00011100,B00000000}; // Q
byte letter_R[] = {B11111100,B01100110,B01100110,B01111100,B01101100,B01100110,B11110110,B00000000}; // R
byte letter_S[] = {B01111000,B11001100,B11100000,B01110000,B00011100,B11001100,B01111000,B00000000}; // S
byte letter_T[] = {B11111100,B10110100,B00110000,B00110000,B00110000,B00110000,B01111000,B00000000}; // T
byte letter_U[] = {B11001100,B11001100,B11001100,B11001100,B11001100,B11001100,B11111100,B00000000}; // U
byte letter_V[] = {B11001100,B11001100,B11001100,B11001100,B11001100,B01111000,B00110000,B00000000}; // V
byte letter_W[] = {B11000110,B11000110,B11000110,B11010110,B11111110,B11101110,B11000110,B00000000}; // W
byte letter_X[] = {B11000110,B11000110,B01101100,B00111000,B00111000,B01101100,B11000110,B00000000}; // X
byte letter_Y[] = {B11001100,B11001100,B11001100,B01111000,B00110000,B00110000,B01111000,B00000000}; // Y
byte letter_Z[] = {B11111110,B11000110,B10001100,B00011000,B00110010,B01100110,B11111110,B00000000}; // Z

byte letter_a[] = {B00000000,B00000000,B01111000,B00001100,B01111100,B11001100,B01110110,B00000000}; // a
byte letter_b[] = {B11100000,B01100000,B01100000,B01111100,B01100110,B01100110,B11011100,B00000000}; // b
byte letter_c[] = {B00000000,B00000000,B01111000,B11001100,B11000000,B11001100,B01111000,B00000000}; // c
byte letter_d[] = {B00011100,B00001100,B00001100,B01111100,B11001100,B11001100,B01110110,B00000000}; // d
byte letter_e[] = {B00000000,B00000000,B01111000,B11001100,B11111100,B11000000,B01111000,B00000000}; // e
byte letter_f[] = {B00111000,B01101100,B01100000,B11110000,B01100000,B01100000,B11110000,B00000000}; // f
byte letter_g[] = {B00000000,B00000000,B01110110,B11001100,B11001100,B01111100,B00001100,B11111000}; // g
byte letter_h[] = {B11100000,B01100000,B01101100,B01110110,B01100110,B01100110,B11100110,B00000000}; // h
byte letter_i[] = {B00110000,B00000000,B01110000,B00110000,B00110000,B00110000,B01111000,B00000000}; // i
byte letter_j[] = {B00001100,B00000000,B00001100,B00001100,B00001100,B11001100,B11001100,B01111000}; // j
byte letter_k[] = {B11100000,B01100000,B01100110,B01101100,B01111000,B01101100,B11100110,B00000000}; // k
byte letter_l[] = {B01110000,B00110000,B00110000,B00110000,B00110000,B00110000,B01111000,B00000000}; // l
byte letter_m[] = {B00000000,B00000000,B11001100,B11111110,B11111110,B11010110,B11000110,B00000000}; // m
byte letter_n[] = {B00000000,B00000000,B11111000,B11001100,B11001100,B11001100,B11001100,B00000000}; // n
byte letter_o[] = {B00000000,B00000000,B01111000,B11001100,B11001100,B11001100,B01111000,B00000000}; // o
byte letter_p[] = {B00000000,B00000000,B11011100,B01100110,B01100110,B01111100,B01100000,B11110000}; // p
byte letter_q[] = {B00000000,B00000000,B01110110,B11001100,B11001100,B01111100,B00001100,B00011110}; // q
byte letter_r[] = {B00000000,B00000000,B10011100,B01110110,B01100110,B01100000,B11110000,B00000000}; // r
byte letter_s[] = {B00000000,B00000000,B01111100,B11000000,B01111000,B00001100,B11111000,B00000000}; // s
byte letter_t[] = {B00010000,B00110000,B01111100,B00110000,B00110000,B00110100,B00011000,B00000000}; // t
byte letter_u[] = {B00000000,B00000000,B11001100,B11001100,B11001100,B11001100,B01110110,B00000000}; // u
byte letter_v[] = {B00000000,B00000000,B11001100,B11001100,B11001100,B01111000,B00110000,B00000000}; // v
byte letter_w[] = {B00000000,B00000000,B11000110,B11000110,B11010110,B11111110,B01101100,B00000000}; // w
byte letter_x[] = {B00000000,B00000000,B11000110,B01101100,B00111000,B01101100,B11000110,B00000000}; // x
byte letter_y[] = {B00000000,B00000000,B11001100,B11001100,B11001100,B01111100,B00001100,B11111000}; // y
byte letter_z[] = {B00000000,B00000000,B11111100,B10011000,B00110000,B01100100,B11111100,B00000000}; // z

byte letter_0[] = {B01111000,B11001100,B11011100,B11111100,B11101100,B11001100,B01111100,B00000000}; // 0
byte letter_1[] = {B00110000,B01110000,B00110000,B00110000,B00110000,B00110000,B11111100,B00000000}; // 1
byte letter_2[] = {B01111000,B11001100,B00001100,B00111000,B01100000,B11001100,B11111100,B00000000}; // 2
byte letter_3[] = {B01111000,B11001100,B00001100,B00111000,B00001100,B11001100,B01111000,B00000000}; // 3
byte letter_4[] = {B00011100,B00111100,B01101100,B11001100,B11111110,B00001100,B00011110,B00000000}; // 4
byte letter_5[] = {B11111100,B11000000,B11111000,B00001100,B00001100,B11001100,B01111000,B00000000}; // 5
byte letter_6[] = {B00111000,B01100000,B11000000,B11111000,B11001100,B11001100,B01111000,B00000000}; // 6
byte letter_7[] = {B11111100,B11001100,B00001100,B00011000,B00110000,B00110000,B00110000,B00000000}; // 7
byte letter_8[] = {B01111000,B11001100,B11001100,B01111000,B11001100,B11001100,B01111000,B00000000}; // 8
byte letter_9[] = {B01111000,B11001100,B11001100,B01111100,B00001100,B00011000,B01110000,B00000000}; // 9

byte letter_s1[] = {B00110000,B01111000,B01111000,B00110000,B00110000,B00000000,B00110000,B00000000}; // !
byte letter_s2[] = {B01101100,B01101100,B11111110,B01101100,B11111110,B01101100,B01101100,B00000000}; // #
byte letter_s3[] = {B00110000,B01111100,B11000000,B01111000,B00001100,B11111000,B00110000,B00000000}; // $
byte letter_s4[] = {B00000000,B11000110,B11001100,B00011000,B00110000,B01100110,B11000110,B00000000}; // %
byte letter_s5[] = {B00111000,B01101100,B00111000,B01110110,B11011100,B11001100,B01110110,B00000000}; // &
byte letter_s6[] = {B01111000,B11001100,B00001100,B00011000,B00110000,B00000000,B00110000,B00000000}; // ?


